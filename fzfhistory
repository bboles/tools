#!/usr/bin/env bash

__fzf_history () {
  local output
  local old_readline_line="$READLINE_LINE"

           # Reverse file so our most recent entries show up first.
  output=$(sort -r ~/.persistent_history | \
           # The pipe symbol is used a field separator in our file.
           # Check the second field for dupes and print the entire line.
           awk -F'|' '!seen[$2]++ {print $0}' | \
           # Also have fzf use the second field as well as the pipe delimiter.
           fzf --nth=2 \
               --delimiter='\|' \
               --tiebreak=begin,index \
               --bind=ctrl-r:toggle-sort \
               --query "$READLINE_LINE" | \
           # Only print the command field.
           awk -F'|' '{print $2}')

  READLINE_LINE=${output#*}
  if [[ -n "$READLINE_LINE" ]]; then
    # If we selected an fzf entry, we will have READLINE_LINE set so setup
    # READLINE_POINT to be at the end of the READLINE_LINE string.
    READLINE_POINT="${#READLINE_LINE}"
    echo "$READLINE_LINE"
  else
    # If we did not select an fzf entry, put READLINE_LINE back to what it was
    # originally.  READLINE_POINT will still be what it was originally so our
    # cursor goes back to the original spot.
    READLINE_LINE="${old_readline_line}"
  fi
}
